name: "🤖 PMERIT Frontend Auto Review"

on:
  push:
    branches:
      - main
      - dev
      - feature/**
    paths:
      - '**/*.html'
      - '**/*.css'
      - '**/*.js'
      - 'assets/**'
      - 'partials/**'
  
  pull_request:
    branches:
      - main
      - dev
    paths:
      - '**/*.html'
      - '**/*.css'
      - '**/*.js'
      - 'assets/**'
      - 'partials/**'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  lint-and-validate:
    name: "🧩 Code Quality Checks"
    runs-on: ubuntu-latest
    
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4
      
      - name: "🔧 Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: "📦 Install Linters"
        run: |
          npm install -g htmlhint stylelint stylelint-config-standard eslint
      
      - name: "🔍 Run HTML Lint"
        continue-on-error: true
        run: |
          echo "Running HTMLHint..."
          htmlhint "**/*.html" --config .htmlhintrc || true
      
      - name: "🎨 Run CSS Lint"
        continue-on-error: true
        run: |
          echo "Running Stylelint..."
          npx stylelint "**/*.css" --config .stylelintrc.json || true
      
      - name: "⚙️ Run JavaScript Lint"
        continue-on-error: true
        run: |
          echo "Running ESLint..."
          npx eslint "**/*.js" --config .eslintrc.json || true
      
      - name: "📊 Generate Lint Report"
        run: |
          echo "### 📋 Lint Summary" > lint-report.md
          echo "" >> lint-report.md
          echo "✅ HTML, CSS, and JavaScript linting completed." >> lint-report.md
          echo "" >> lint-report.md
          echo "See workflow logs for detailed results." >> lint-report.md
      
      - name: "📤 Upload Lint Report"
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: lint-report.md

  copilot-review:
    name: "🤖 GitHub Copilot Review"
    runs-on: ubuntu-latest
    needs: lint-and-validate
    
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4
      
      - name: "🔍 Load Copilot Configuration"
        run: |
          echo "Loading .copilot/config.yml and .copilot/instructions.md"
          ls -la .copilot/
      
      - name: "🧠 Trigger Copilot Review"
        run: |
          echo "🤖 Copilot Review Initiated"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "Reviewing files based on:"
          echo "  • .copilot/config.yml"
          echo "  • .copilot/instructions.md"
          echo "  • .copilot/hints/"
          echo ""
          echo "Focus areas:"
          echo "  ✓ Responsive design (mobile-first)"
          echo "  ✓ Brand consistency (Pmerit theme)"
          echo "  ✓ Accessibility (WCAG AA)"
          echo "  ✓ Code quality and structure"
          echo "  ✓ Safe-area-inset for iOS"
          echo "  ✓ 44px minimum touch targets"
          echo ""
          echo "📝 Review comments will be posted inline in this PR."
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
      
      - name: "📝 Post Review Summary Comment"
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const comment = `
            ## 🤖 Copilot Auto-Review Completed
            
            Frontend files have been reviewed for:
            - ✅ **Responsive design** (mobile-first approach)
            - ✅ **Brand consistency** (Pmerit theme colors & fonts)
            - ✅ **Accessibility** (WCAG AA standards)
            - ✅ **Code quality** (semantic HTML, CSS variables, modular JS)
            - ✅ **Mobile optimization** (safe-area-inset, touch targets)
            
            ### 📚 Reference Files
            - [.copilot/config.yml](.copilot/config.yml)
            - [INSTRUCTIONS_Copilot.md](INSTRUCTIONS_Copilot.md)
            - [Pmerit Theme](.copilot/Pmerit-theme_typography.html)
            - [Blueprint](.copilot/blueprint-index.html)
            
            ### 🔍 Review Focus
            Based on the [.copilot/instructions.md](.copilot/instructions.md):
            - Fonts: Montserrat (headings), Inter (body)
            - Colors: Dark Blue (#2A5B8C), Teal (#4AA4B9), Coral (#FF6B6B)
            - Mobile: Non-scrollable viewport, hamburger menu
            - Desktop: Three-panel layout, persistent sidebar
            
            See inline comments for specific feedback. 👇
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  label-pr:
    name: "🏷️ Auto-Label Pull Request"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: copilot-review
    
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4
      
      - name: "🏷️ Add Labels"
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          labels: |
            frontend
            copilot-reviewed
            needs-human-review

  mobile-check:
    name: "📱 Mobile-First Validation"
    runs-on: ubuntu-latest
    
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4
      
      - name: "📱 Check Mobile Requirements"
        run: |
          echo "Checking mobile-first requirements..."
          
          # Check for safe-area-inset usage
          if grep -r "safe-area-inset" --include="*.css" .; then
            echo "✅ Safe-area-inset found"
          else
            echo "⚠️  WARNING: safe-area-inset not found in CSS files"
          fi
          
          # Check for dvh (dynamic viewport height)
          if grep -r "dvh" --include="*.css" .; then
            echo "✅ Dynamic viewport height (dvh) found"
          else
            echo "⚠️  WARNING: dvh not found (iOS compatibility)"
          fi
          
          # Check for mobile-first media queries
          if grep -r "@media (min-width:" --include="*.css" .; then
            echo "✅ Mobile-first media queries found"
          else
            echo "⚠️  WARNING: No mobile-first media queries detected"
          fi
          
          # Check for CSS variables usage
          if grep -r "var(--" --include="*.css" .; then
            echo "✅ CSS variables in use"
          else
            echo "⚠️  WARNING: CSS variables not found"
          fi
          
          echo ""
          echo "Mobile-first validation complete!"

  accessibility-check:
    name: "♿ Accessibility Audit"
    runs-on: ubuntu-latest
    
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4
      
      - name: "♿ Check Accessibility Requirements"
        run: |
          echo "Checking accessibility standards..."
          
          # Check for alt attributes
          if grep -r '<img' --include="*.html" . | grep -v 'alt='; then
            echo "⚠️  WARNING: Images without alt attributes found"
          else
            echo "✅ All images have alt attributes"
          fi
          
          # Check for ARIA labels
          if grep -r "aria-label" --include="*.html" .; then
            echo "✅ ARIA labels found"
          else
            echo "⚠️  WARNING: No ARIA labels detected"
          fi
          
          # Check for semantic HTML
          if grep -r "<header>\|<main>\|<footer>\|<nav>" --include="*.html" .; then
            echo "✅ Semantic HTML elements found"
          else
            echo "⚠️  WARNING: No semantic HTML5 elements detected"
          fi
          
          echo ""
          echo "Accessibility audit complete!"
