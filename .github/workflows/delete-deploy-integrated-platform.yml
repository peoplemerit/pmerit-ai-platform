name: Deploy Gabriel AI Integrated Platform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        if [ -f "package.json" ]; then
          npm ci
        fi
    
    - name: Build frontend integration
      run: |
        # Create build script if it doesn't exist
        if [ ! -f "_build.sh" ]; then
          echo "Creating build script..."
          cat > _build.sh << 'BUILD_SCRIPT'
#!/bin/bash
mkdir -p dist
echo "Building Gabriel AI Platform integration..."
if [ -d "frontend" ]; then
  cp -r frontend/* dist/
elif [ -d "monitoring/dashboard" ]; then
  cp -r monitoring/dashboard/* dist/
else
  mkdir -p dist
  echo "Gabriel AI Platform - Integration Ready" > dist/index.html
fi
BUILD_SCRIPT
          chmod +x _build.sh
        fi
        ./_build.sh
    
    - name: Deploy to Cloudflare Pages
      uses: cloudflare/pages-action@v1
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        projectName: pmerit-ai-platform
        directory: dist
        gitHubToken: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Container Health Check
      run: |
        echo "üîç Performing container health checks..."
        # Health check endpoints (will work once containers are accessible)
        curl -f https://gabriel-dashboard.peoplemerit.workers.dev/health || echo "‚ö†Ô∏è Dashboard health check pending"
        curl -f https://gabriel-api.peoplemerit.workers.dev/health || echo "‚ö†Ô∏è API health check pending"
        echo "‚úÖ Deployment workflow completed"

  container-integration-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Test Docker Compose Configuration
      run: |
        if [ -f "docker-compose.yml" ]; then
          echo "‚úÖ Docker Compose configuration found"
          docker-compose config
        else
          echo "‚ÑπÔ∏è Docker Compose configuration will be added in future updates"
        fi
    
    - name: Validate Container Architecture
      run: |
        echo "üîç Validating Gabriel AI container architecture..."
        # Check for container directories
        if [ -d "containers" ]; then
          echo "‚úÖ Container directory structure found"
          ls -la containers/
        else
          echo "‚ÑπÔ∏è Container structure will be integrated in future updates"
        fi
